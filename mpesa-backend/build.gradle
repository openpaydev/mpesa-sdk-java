plugins {
    // Apply the publishing plugin, managed by the root build.gradle.
    // The 'java-library' plugin is also applied automatically from the root.
    id 'com.vanniktech.maven.publish'
}

// Dependencies specific to the 'backend' module
dependencies {
    // This module depends on the core module
    implementation project(':mpesa-core')

    // HTTP client and JSON parsing libraries
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // Lombok for boilerplate reduction
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Testing dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.11.0'
}

// The 'java {}' and 'test {}' blocks are inherited from the root build.gradle, so we remove them from here.
// The manual 'sourceJar' and 'javadocJar' tasks are also removed, as they are created automatically.

// =====================================================================
// ==        PUBLISHING CONFIGURATION FOR THE 'BACKEND' MODULE        ==
// =====================================================================
mavenPublishing {
    // Use the specific artifactId for this module
    coordinates(GROUP, 'mpesa-backend', VERSION_NAME)

    // The rest of the POM information is shared and comes from gradle.properties
    pom {
        name = POM_NAME
        description = POM_DESCRIPTION
        inceptionYear = POM_INCEPTION_YEAR
        url = POM_URL

        licenses {
            license {
                name = POM_LICENCE_NAME
                url = POM_LICENCE_URL
                distribution = POM_LICENCE_DIST
            }
        }

        developers {
            developer {
                id = POM_DEVELOPER_ID
                name = POM_DEVELOPER_NAME
                email = POM_DEVELOPER_EMAIL
                url = POM_DEVELOPER_URL
                organization = POM_ORGANIZATION_NAME
                organizationUrl = POM_ORGANIZATION_URL
            }
        }

        scm {
            url = POM_SCM_URL
            connection = POM_SCM_CONNECTION
            developerConnection = POM_SCM_DEV_CONNECTION
        }
    }

    if (project.hasProperty('signAllPublications') && signAllPublications.toBoolean()) {
        signAllPublications()
    }
}